{"ast":null,"code":"var _jsxFileName = \"/home/milan/Desktop/React/project/src/components/GenreSlider/GenreSlider.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport * as actionTypes from '../../store/actions';\nimport classes from './GenreSlider.module.css';\n\nclass GenreSlider extends Component {\n  componentDidMount() {\n    this.loadMoviesHandler();\n  }\n\n  async loadMoviesHandler() {\n    await axios.get(`https://api.themoviedb.org/3/discover/movie?with_genres=${this.props.genre.id}&api_key=${this.props.apiKey}`).then(response => {\n      let moviesByGenre = {\n        genre: this.props.genre,\n        movies: response.data.results.slice(0, 1)\n      };\n      this.props.storeMovies(moviesByGenre);\n      console.log(response.data.results.slice(0, 1));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.GenreSlider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, this.props.genre), this.props.movies.map(moviesByGenre => console.log(moviesByGenre)), console.log(\"---------------\"));\n  }\n\n}\n\n;\n\nconst dataFromStore = state => {\n  return {\n    apiKey: state.apiKey,\n    genres: state.genres,\n    movies: state.movies\n  };\n};\n\nconst dispatching = dispatch => {\n  return {\n    storeMovies: moviesByGenre => dispatch({\n      type: actionTypes.STORE_MOVIES,\n      moviesByGenre: moviesByGenre\n    })\n  };\n};\n\nexport default connect(dataFromStore, dispatching)(GenreSlider);","map":{"version":3,"sources":["/home/milan/Desktop/React/project/src/components/GenreSlider/GenreSlider.js"],"names":["React","Component","connect","axios","actionTypes","classes","GenreSlider","componentDidMount","loadMoviesHandler","get","props","genre","id","apiKey","then","response","moviesByGenre","movies","data","results","slice","storeMovies","console","log","render","map","dataFromStore","state","genres","dispatching","dispatch","type","STORE_MOVIES"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;AAEA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAEhCM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,iBAAL;AACH;;AAED,QAAMA,iBAAN,GAA0B;AACtB,UAAML,KAAK,CAACM,GAAN,CAAW,2DAA0D,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,EAAG,YAAW,KAAKF,KAAL,CAAWG,MAAO,EAAtH,EACDC,IADC,CACIC,QAAQ,IAAI;AACd,UAAIC,aAAa,GAAG;AACpBL,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADE;AAEpBM,QAAAA,MAAM,EAAEF,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B;AAFY,OAApB;AAIJ,WAAKV,KAAL,CAAWW,WAAX,CAAuBL,aAAvB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,CAAZ;AACH,KARK,CAAN;AASH;;AAEDI,EAAAA,MAAM,GAAI;AACN,wBACI;AAAK,MAAA,SAAS,EAAEnB,OAAO,CAACC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKI,KAAL,CAAWC,KAAf,CADJ,EAEK,KAAKD,KAAL,CAAWO,MAAX,CAAkBQ,GAAlB,CAAsBT,aAAa,IAAIM,OAAO,CAACC,GAAR,CAAYP,aAAZ,CAAvC,CAFL,EAGKM,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAHL,CADJ;AAOH;;AA1B+B;;AA2BnC;;AAED,MAAMG,aAAa,GAAGC,KAAK,IAAI;AAC3B,SAAO;AACHd,IAAAA,MAAM,EAAEc,KAAK,CAACd,MADX;AAEHe,IAAAA,MAAM,EAAED,KAAK,CAACC,MAFX;AAGHX,IAAAA,MAAM,EAAEU,KAAK,CAACV;AAHX,GAAP;AAKH,CAND;;AAQA,MAAMY,WAAW,GAAGC,QAAQ,IAAI;AAC5B,SAAO;AACHT,IAAAA,WAAW,EAAGL,aAAD,IAAmBc,QAAQ,CAAC;AACrCC,MAAAA,IAAI,EAAE3B,WAAW,CAAC4B,YADmB;AAErChB,MAAAA,aAAa,EAAEA;AAFsB,KAAD;AADrC,GAAP;AAMH,CAPD;;AASA,eAAed,OAAO,CAACwB,aAAD,EAAgBG,WAAhB,CAAP,CAAoCvB,WAApC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport * as actionTypes from '../../store/actions';\n\nimport classes from './GenreSlider.module.css';\n\nclass GenreSlider extends Component {\n\n    componentDidMount() {\n        this.loadMoviesHandler();   \n    }\n\n    async loadMoviesHandler() {\n        await axios.get(`https://api.themoviedb.org/3/discover/movie?with_genres=${this.props.genre.id}&api_key=${this.props.apiKey}`)\n            .then(response => {\n                let moviesByGenre = {\n                genre: this.props.genre,\n                movies: response.data.results.slice(0, 1)\n            }\n            this.props.storeMovies(moviesByGenre);     \n            console.log(response.data.results.slice(0, 1));          \n        });\n    }\n\n    render () {\n        return (\n            <div className={classes.GenreSlider}>\n                <p>{this.props.genre}</p>\n                {this.props.movies.map(moviesByGenre => console.log(moviesByGenre))}\n                {console.log(\"---------------\")}\n            </div>\n        );\n    }\n};\n\nconst dataFromStore = state => {\n    return {\n        apiKey: state.apiKey,\n        genres: state.genres,\n        movies: state.movies\n    }\n}\n\nconst dispatching = dispatch => {\n    return {\n        storeMovies: (moviesByGenre) => dispatch({\n            type: actionTypes.STORE_MOVIES, \n            moviesByGenre: moviesByGenre\n        })\n    }\n}\n\nexport default connect(dataFromStore, dispatching)(GenreSlider);"]},"metadata":{},"sourceType":"module"}