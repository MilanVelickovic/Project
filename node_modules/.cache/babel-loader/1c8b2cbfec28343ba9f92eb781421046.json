{"ast":null,"code":"var _jsxFileName = \"/home/milan/Desktop/React/project/src/components/GenreSlider/GenreSlider.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport * as actionTypes from '../../store/actions';\nimport classes from './GenreSlider.module.css';\n\nclass GenreSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.loadMoviesHandler();\n  }\n  /* \n  for (let genre of this.props.genres) {\n          await axios.get(`https://api.themoviedb.org/3/discover/movie?with_genres=${genre.id}&api_key=${this.props.apiKey}`)\n              .then(response => {\n                  this.props.storeMovies(genre.name, response.data.results.slice(0, 6));\n              });\n      }\n  */\n\n\n  componentDidMount() {\n    console.log(moviesByGenre);\n  }\n\n  async loadMoviesHandler() {\n    for (let genre of this.props.genres) {\n      if (genre.name === this.props.genre) {\n        await axios.get(`https://api.themoviedb.org/3/discover/movie?with_genres=${genre.id}&api_key=${this.props.apiKey}`).then(response => {\n          let moviesByGenre = {\n            genre: genre,\n            movies: response.data.results.slice(0, 1)\n          };\n          this.props.storeMovies(moviesByGenre);\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.GenreSlider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, this.props.genre));\n  }\n\n}\n\n;\n\nconst dataFromStore = state => {\n  return {\n    apiKey: state.apiKey,\n    genres: state.genres,\n    movies: state.movies\n  };\n};\n\nconst dispatching = dispatch => {\n  return {\n    storeMovies: moviesByGenre => dispatch({\n      type: actionTypes.STORE_MOVIES,\n      moviesByGenre: moviesByGenre\n    })\n  };\n};\n\nexport default connect(dataFromStore, dispatching)(GenreSlider);","map":{"version":3,"sources":["/home/milan/Desktop/React/project/src/components/GenreSlider/GenreSlider.js"],"names":["React","Component","connect","axios","actionTypes","classes","GenreSlider","constructor","props","loadMoviesHandler","componentDidMount","console","log","moviesByGenre","genre","genres","name","get","id","apiKey","then","response","movies","data","results","slice","storeMovies","render","dataFromStore","state","dispatching","dispatch","type","STORE_MOVIES"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;AAEA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAEhCM,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKC,iBAAL;AACH;AAED;;;;;;;;;;AASAC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AACH;;AAED,QAAMJ,iBAAN,GAA0B;AACtB,SAAK,IAAIK,KAAT,IAAkB,KAAKN,KAAL,CAAWO,MAA7B,EAAqC;AACjC,UAAID,KAAK,CAACE,IAAN,KAAe,KAAKR,KAAL,CAAWM,KAA9B,EAAqC;AACjC,cAAMX,KAAK,CAACc,GAAN,CAAW,2DAA0DH,KAAK,CAACI,EAAG,YAAW,KAAKV,KAAL,CAAWW,MAAO,EAA3G,EACDC,IADC,CACIC,QAAQ,IAAI;AACd,cAAIR,aAAa,GAAG;AACpBC,YAAAA,KAAK,EAAEA,KADa;AAEpBQ,YAAAA,MAAM,EAAED,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B;AAFY,WAApB;AAIJ,eAAKjB,KAAL,CAAWkB,WAAX,CAAuBb,aAAvB;AAEH,SARK,CAAN;AASH;AACJ;AACJ;;AAEDc,EAAAA,MAAM,GAAI;AACN,wBACI;AAAK,MAAA,SAAS,EAAEtB,OAAO,CAACC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKE,KAAL,CAAWM,KAAf,CADJ,CADJ;AAKH;;AA1C+B;;AA2CnC;;AAED,MAAMc,aAAa,GAAGC,KAAK,IAAI;AAC3B,SAAO;AACHV,IAAAA,MAAM,EAAEU,KAAK,CAACV,MADX;AAEHJ,IAAAA,MAAM,EAAEc,KAAK,CAACd,MAFX;AAGHO,IAAAA,MAAM,EAAEO,KAAK,CAACP;AAHX,GAAP;AAKH,CAND;;AAQA,MAAMQ,WAAW,GAAGC,QAAQ,IAAI;AAC5B,SAAO;AACHL,IAAAA,WAAW,EAAGb,aAAD,IAAmBkB,QAAQ,CAAC;AACrCC,MAAAA,IAAI,EAAE5B,WAAW,CAAC6B,YADmB;AAErCpB,MAAAA,aAAa,EAAEA;AAFsB,KAAD;AADrC,GAAP;AAMH,CAPD;;AASA,eAAeX,OAAO,CAAC0B,aAAD,EAAgBE,WAAhB,CAAP,CAAoCxB,WAApC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport * as actionTypes from '../../store/actions';\n\nimport classes from './GenreSlider.module.css';\n\nclass GenreSlider extends Component {\n\n    constructor (props) {\n        super(props);\n        this.loadMoviesHandler();   \n    }\n\n    /* \n    for (let genre of this.props.genres) {\n            await axios.get(`https://api.themoviedb.org/3/discover/movie?with_genres=${genre.id}&api_key=${this.props.apiKey}`)\n                .then(response => {\n                    this.props.storeMovies(genre.name, response.data.results.slice(0, 6));\n                });\n        }\n    */\n\n    componentDidMount() {\n        console.log(moviesByGenre);\n    }\n\n    async loadMoviesHandler() {\n        for (let genre of this.props.genres) {\n            if (genre.name === this.props.genre) {\n                await axios.get(`https://api.themoviedb.org/3/discover/movie?with_genres=${genre.id}&api_key=${this.props.apiKey}`)\n                    .then(response => {\n                        let moviesByGenre = {\n                        genre: genre,\n                        movies: response.data.results.slice(0, 1)\n                    }\n                    this.props.storeMovies(moviesByGenre);\n                    \n                });\n            }\n        }\n    }\n\n    render () {\n        return (\n            <div className={classes.GenreSlider}>\n                <p>{this.props.genre}</p>\n            </div>\n        );\n    }\n};\n\nconst dataFromStore = state => {\n    return {\n        apiKey: state.apiKey,\n        genres: state.genres,\n        movies: state.movies\n    }\n}\n\nconst dispatching = dispatch => {\n    return {\n        storeMovies: (moviesByGenre) => dispatch({\n            type: actionTypes.STORE_MOVIES, \n            moviesByGenre: moviesByGenre\n        })\n    }\n}\n\nexport default connect(dataFromStore, dispatching)(GenreSlider);"]},"metadata":{},"sourceType":"module"}