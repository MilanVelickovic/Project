{"ast":null,"code":"var _jsxFileName = \"/home/milan/Desktop/React/project/src/containers/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport * as actionTypes from '../../store/actions';\nimport classes from './Login.module.css';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formElements: {\n        email: {\n          type: 'text',\n          placeholder: 'Email',\n          value: ''\n        },\n        password: {\n          type: 'password',\n          placeholder: 'Password',\n          value: ''\n        }\n      }\n    };\n\n    this.inputChangeHandler = (event, element) => {\n      let formElementsCopy = { ...this.state.formElements\n      };\n      formElementsCopy[element].value = event.target.value;\n      this.setState({\n        formElements: formElementsCopy\n      });\n    };\n\n    this.errorHandler = statusCode => {\n      switch (statusCode) {\n        case 200:\n          console.log(\"Successful!\");\n          break;\n\n        case 401:\n          console.log(\"Incorrect password!\");\n          break;\n\n        case 422:\n          console.log(\"Email doesn't exists!\");\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.login = event => {\n      event.preventDefault();\n      const form_data = {\n        email: this.state.formElements.email.value,\n        password: this.state.formElements.password.value\n      };\n      axios.post(`http://dev.api.kabox.io/api/auth/login/`, form_data).then(response => {\n        this.props.setAuthenticationHandler(true);\n        this.props.history.replace(`/home`);\n        console.log(this.props);\n      }).catch(error => console.log(error));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"Login\"), Object.keys(this.state.formElements).map(formElement => {\n      return /*#__PURE__*/React.createElement(Input, {\n        key: formElement,\n        type: this.state.formElements[formElement].type,\n        placeholder: this.state.formElements[formElement].placeholder,\n        value: this.state.formElements[formElement].value,\n        action: event => this.inputChangeHandler(event, formElement),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 32\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Login\")));\n  }\n\n}\n\nconst dataFromStore = state => {\n  return {\n    authenticated: state.authenticated\n  };\n};\n\nconst dispatching = dispatch => {\n  return {\n    setAuthenticationHandler: authentification => dispatch({\n      type: actionTypes.SET_AUTHENTICATION,\n      authentification: authentification\n    })\n  };\n};\n\nexport default connect(dataFromStore, dispatching)(Login);","map":{"version":3,"sources":["/home/milan/Desktop/React/project/src/containers/Login/Login.js"],"names":["React","Component","connect","axios","actionTypes","classes","Input","Button","Login","state","formElements","email","type","placeholder","value","password","inputChangeHandler","event","element","formElementsCopy","target","setState","errorHandler","statusCode","console","log","login","preventDefault","form_data","post","then","response","props","setAuthenticationHandler","history","replace","catch","error","render","Object","keys","map","formElement","dataFromStore","authenticated","dispatching","dispatch","authentification","SET_AUTHENTICATION"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE1BQ,KAF0B,GAElB;AACJC,MAAAA,YAAY,EAAE;AACVC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,MADH;AAEHC,UAAAA,WAAW,EAAE,OAFV;AAGHC,UAAAA,KAAK,EAAE;AAHJ,SADG;AAMVC,QAAAA,QAAQ,EAAE;AACNH,UAAAA,IAAI,EAAE,UADA;AAENC,UAAAA,WAAW,EAAE,UAFP;AAGNC,UAAAA,KAAK,EAAE;AAHD;AANA;AADV,KAFkB;;AAAA,SAiB1BE,kBAjB0B,GAiBL,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACrC,UAAIC,gBAAgB,GAAG,EAAC,GAAG,KAAKV,KAAL,CAAWC;AAAf,OAAvB;AACAS,MAAAA,gBAAgB,CAACD,OAAD,CAAhB,CAA0BJ,KAA1B,GAAkCG,KAAK,CAACG,MAAN,CAAaN,KAA/C;AACA,WAAKO,QAAL,CAAc;AACVX,QAAAA,YAAY,EAAES;AADJ,OAAd;AAGH,KAvByB;;AAAA,SAyB1BG,YAzB0B,GAyBVC,UAAD,IAAgB;AAC3B,cAAQA,UAAR;AACI,aAAK,GAAL;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA;;AACJ,aAAK,GAAL;AACID,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA;;AACJ,aAAK,GAAL;AACID,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA;;AACJ;AACI;AAXR;AAaH,KAvCyB;;AAAA,SAyC1BC,KAzC0B,GAyCjBT,KAAD,IAAW;AACfA,MAAAA,KAAK,CAACU,cAAN;AACA,YAAMC,SAAS,GAAG;AACdjB,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,YAAX,CAAwBC,KAAxB,CAA8BG,KADvB;AAEdC,QAAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,YAAX,CAAwBK,QAAxB,CAAiCD;AAF7B,OAAlB;AAIAX,MAAAA,KAAK,CAAC0B,IAAN,CAAY,yCAAZ,EAAsDD,SAAtD,EACKE,IADL,CACUC,QAAQ,IAAI;AACd,aAAKC,KAAL,CAAWC,wBAAX,CAAoC,IAApC;AACA,aAAKD,KAAL,CAAWE,OAAX,CAAmBC,OAAnB,CAA4B,OAA5B;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAjB;AACH,OALL,EAMKI,KANL,CAMWC,KAAK,IAAIb,OAAO,CAACC,GAAR,CAAYY,KAAZ,CANpB;AAQH,KAvDyB;AAAA;;AAyD1BC,EAAAA,MAAM,GAAI;AACN,wBACI;AAAK,MAAA,SAAS,EAAEjC,OAAO,CAACG,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAE,KAAKkB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEKa,MAAM,CAACC,IAAP,CAAY,KAAK/B,KAAL,CAAWC,YAAvB,EAAqC+B,GAArC,CAAyCC,WAAW,IAAI;AACrD,0BAAO,oBAAC,KAAD;AACK,QAAA,GAAG,EAAEA,WADV;AAEK,QAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWC,YAAX,CAAwBgC,WAAxB,EAAqC9B,IAFhD;AAGK,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWC,YAAX,CAAwBgC,WAAxB,EAAqC7B,WAHvD;AAIK,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,YAAX,CAAwBgC,WAAxB,EAAqC5B,KAJjD;AAKK,QAAA,MAAM,EAAGG,KAAD,IAAW,KAAKD,kBAAL,CAAwBC,KAAxB,EAA+ByB,WAA/B,CALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAMH,KAPA,CAFL,eAUI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVJ,CADJ,CADJ;AAgBH;;AA1EyB;;AA8E9B,MAAMC,aAAa,GAAGlC,KAAK,IAAI;AAC3B,SAAO;AACHmC,IAAAA,aAAa,EAAEnC,KAAK,CAACmC;AADlB,GAAP;AAGH,CAJD;;AAMA,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AAC5B,SAAO;AACHb,IAAAA,wBAAwB,EAAGc,gBAAD,IAAsBD,QAAQ,CAAC;AACrDlC,MAAAA,IAAI,EAAER,WAAW,CAAC4C,kBADmC;AAErDD,MAAAA,gBAAgB,EAAEA;AAFmC,KAAD;AADrD,GAAP;AAMH,CAPD;;AASA,eAAe7C,OAAO,CAACyC,aAAD,EAAgBE,WAAhB,CAAP,CAAoCrC,KAApC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport * as actionTypes from '../../store/actions';\n\nimport classes from './Login.module.css';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\n\nclass Login extends Component {\n\n    state = {\n        formElements: {\n            email: {\n                type: 'text',\n                placeholder: 'Email',\n                value: ''\n            },\n            password: {\n                type: 'password',\n                placeholder: 'Password',\n                value: ''\n            }\n        }\n    }\n\n    inputChangeHandler = (event, element) => {\n        let formElementsCopy = {...this.state.formElements};\n        formElementsCopy[element].value = event.target.value;\n        this.setState({\n            formElements: formElementsCopy\n        });\n    }\n\n    errorHandler = (statusCode) => {\n        switch (statusCode) {\n            case 200:\n                console.log(\"Successful!\");\n                break;\n            case 401:\n                console.log(\"Incorrect password!\");\n                break;\n            case 422:\n                console.log(\"Email doesn't exists!\");\n                break;\n            default:\n                break;      \n        }\n    }\n\n    login = (event) => {\n        event.preventDefault();\n        const form_data = {\n            email: this.state.formElements.email.value,\n            password: this.state.formElements.password.value\n        }\n        axios.post(`http://dev.api.kabox.io/api/auth/login/`, form_data)\n            .then(response => {\n                this.props.setAuthenticationHandler(true);\n                this.props.history.replace(`/home`);\n                console.log(this.props);\n            })\n            .catch(error => console.log(error));\n\n    }\n\n    render () {\n        return (\n            <div className={classes.Login}>\n                <form onSubmit={this.login}>\n                    <h1>Login</h1>\n                    {Object.keys(this.state.formElements).map(formElement => {\n                        return <Input \n                                    key={formElement}\n                                    type={this.state.formElements[formElement].type} \n                                    placeholder={this.state.formElements[formElement].placeholder} \n                                    value={this.state.formElements[formElement].value}\n                                    action={(event) => this.inputChangeHandler(event, formElement)}/>;\n                    })}\n                    <Button>Login</Button>\n                </form>\n            </div>\n        );\n    }\n    \n}\n\nconst dataFromStore = state => {\n    return {\n        authenticated: state.authenticated\n    }\n}\n\nconst dispatching = dispatch => {\n    return {\n        setAuthenticationHandler: (authentification) => dispatch({\n            type: actionTypes.SET_AUTHENTICATION,\n            authentification: authentification\n        })\n    }\n}\n\nexport default connect(dataFromStore, dispatching)(Login);"]},"metadata":{},"sourceType":"module"}