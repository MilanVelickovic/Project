{"ast":null,"code":"var _jsxFileName = \"/home/milan/Desktop/React/project/src/components/GenreSlider/GenreSlider.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport * as actionTypes from '../../store/actions';\nimport MovieThumbnail from './MovieThumbnail/MovieThumbnail';\nimport classes from './GenreSlider.module.css';\n\nclass GenreSlider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.findIndex = (arrayName, name) => {\n      return arrayName.map(element => {\n        return element.name;\n      }).indexOf(name);\n    };\n  }\n\n  componentDidMount() {\n    this.loadMoviesHandler();\n  }\n\n  async loadMoviesHandler() {\n    await axios.get(`https://api.themoviedb.org/3/discover/movie?with_genres=${this.props.id}&api_key=${this.props.apiKey}`).then(response => {\n      let moviesByGenre = {\n        genre: this.props.genre,\n        movies: response.data.results.slice(0, this.props.numberOfMoviesPerGenre)\n      };\n      this.props.storeMovies(moviesByGenre);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.GenreSlider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, this.props.genre), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, this.props.movies.map(genre => {\n      if (genre.genre === this.props.genre) {\n        console.log(\"Index: \" + this.findIndex(this.props.genres, genre.genre));\n        return [...genre.movies].map(movie => {\n          return /*#__PURE__*/React.createElement(MovieThumbnail, {\n            key: movie.id,\n            title: movie.title,\n            thumbnail: movie.backdrop_path,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 40\n            }\n          });\n        });\n      }\n    })));\n  }\n\n}\n\n;\n\nconst dataFromStore = state => {\n  return {\n    apiKey: state.apiKey,\n    genres: state.genres,\n    numberOfMoviesPerGenre: state.numberOfMoviesPerGenre,\n    movies: state.movies\n  };\n};\n\nconst dispatching = dispatch => {\n  return {\n    storeMovies: moviesByGenre => dispatch({\n      type: actionTypes.STORE_MOVIES,\n      moviesByGenre: moviesByGenre\n    })\n  };\n};\n\nexport default connect(dataFromStore, dispatching)(GenreSlider);","map":{"version":3,"sources":["/home/milan/Desktop/React/project/src/components/GenreSlider/GenreSlider.js"],"names":["React","Component","connect","axios","actionTypes","MovieThumbnail","classes","GenreSlider","findIndex","arrayName","name","map","element","indexOf","componentDidMount","loadMoviesHandler","get","props","id","apiKey","then","response","moviesByGenre","genre","movies","data","results","slice","numberOfMoviesPerGenre","storeMovies","render","console","log","genres","movie","title","backdrop_path","dataFromStore","state","dispatching","dispatch","type","STORE_MOVIES"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport * as actionTypes from '../../store/actions';\n\nimport MovieThumbnail from './MovieThumbnail/MovieThumbnail';\n\nimport classes from './GenreSlider.module.css';\n\nclass GenreSlider extends Component {\n\n    componentDidMount() {\n        this.loadMoviesHandler();  \n    }\n\n    async loadMoviesHandler() {\n        await axios.get(`https://api.themoviedb.org/3/discover/movie?with_genres=${this.props.id}&api_key=${this.props.apiKey}`)\n            .then(response => {\n                let moviesByGenre = {\n                genre: this.props.genre,\n                movies: response.data.results.slice(0, this.props.numberOfMoviesPerGenre)\n            }\n            this.props.storeMovies(moviesByGenre);  \n        });\n    }\n\n    findIndex = (arrayName, name) => {     \n        return arrayName.map(element => {\n            return element.name;\n        }).indexOf(name);\n    }\n\n    render () {\n        return (\n            <div className={classes.GenreSlider}>\n                <p>{this.props.genre}</p>\n                <div className={classes.movies}>\n                    {this.props.movies.map(genre => {\n                        if (genre.genre === this.props.genre) {\n                            console.log(\"Index: \" + this.findIndex(this.props.genres, genre.genre));\n                            return [...genre.movies].map(movie => {\n                                return <MovieThumbnail key={movie.id} title={movie.title} thumbnail={movie.backdrop_path} />\n                            });\n                        }\n                    })}\n                </div>\n            </div>\n        );\n    }\n};\n\nconst dataFromStore = state => {\n    return {\n        apiKey: state.apiKey,\n        genres: state.genres,\n        numberOfMoviesPerGenre: state.numberOfMoviesPerGenre,\n        movies: state.movies\n    }\n}\n\nconst dispatching = dispatch => {\n    return {\n        storeMovies: (moviesByGenre) => dispatch({\n            type: actionTypes.STORE_MOVIES, \n            moviesByGenre: moviesByGenre\n        })\n    }\n}\n\nexport default connect(dataFromStore, dispatching)(GenreSlider);"]},"metadata":{},"sourceType":"module"}