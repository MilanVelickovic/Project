{"ast":null,"code":"var _jsxFileName = \"/home/milan/Desktop/React/project/src/containers/Home/Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport * as actionTypes from '../../store/actions';\nimport GenreSlider from '../../components/GenreSlider/GenreSlider';\nimport classes from './Home.module.css';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedRow: 0,\n      selectedColumn: 0\n    };\n\n    this.selectedMovieHandler = event => {\n      let row = this.state.selectedRow;\n      let column = this.state.selectedColumn;\n      console.log(event.keyCode);\n\n      switch (event.keyCode) {\n        case 37:\n          if (column > 0) {\n            column--;\n          } else {\n            column = this.props.numberOfMoviesPerGenre - 1;\n          }\n\n          break;\n\n        case 40:\n          if (row < this.props.numberOfGenres - 1) {\n            row++;\n          } else {\n            row = 0;\n          }\n\n          break;\n\n        case 39:\n          if (column < this.props.numberOfMoviesPerGenre - 1) {\n            column++;\n          } else {\n            column = 0;\n          }\n\n          break;\n\n        case 38:\n          if (row > 0) {\n            row--;\n          } else {\n            row = this.props.numberOfGenres - 1;\n          }\n\n          break;\n\n        default:\n          console.log(\"Nope!\");\n          break;\n      }\n\n      this.setState({\n        selectedRow: row,\n        selectedColumn: column\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loadGenresHandler();\n    document.addEventListener(\"keydown\", this.selectedMovieHandler);\n  }\n\n  loadGenresHandler() {\n    axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${this.props.apiKey}&language=en-US`).then(response => this.props.storeGenres(response.data.genres.slice(0, this.props.numberOfGenres)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, this.props.genres.map(genre => {\n      return /*#__PURE__*/React.createElement(GenreSlider, {\n        key: genre.id,\n        id: genre.id,\n        genre: genre.name,\n        selectedRow: this.state.selectedRow,\n        selectedColumn: this.state.selectedColumn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 28\n        }\n      });\n    }));\n  }\n\n}\n\nconst dataFromStore = state => {\n  return {\n    apiKey: state.apiKey,\n    numberOfGenres: state.numberOfGenres,\n    numberOfMoviesPerGenre: state.numberOfMoviesPerGenre,\n    genres: state.genres\n  };\n};\n\nconst dispatching = dispatch => {\n  return {\n    storeGenres: genresArray => dispatch({\n      type: actionTypes.STORE_GENRES,\n      genres: genresArray\n    })\n  };\n};\n\nexport default connect(dataFromStore, dispatching)(Home);","map":{"version":3,"sources":["/home/milan/Desktop/React/project/src/containers/Home/Home.js"],"names":["React","Component","connect","axios","actionTypes","GenreSlider","classes","Home","state","selectedRow","selectedColumn","selectedMovieHandler","event","row","column","console","log","keyCode","props","numberOfMoviesPerGenre","numberOfGenres","setState","componentDidMount","loadGenresHandler","document","addEventListener","get","apiKey","then","response","storeGenres","data","genres","slice","render","map","genre","id","name","dataFromStore","dispatching","dispatch","genresArray","type","STORE_GENRES"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport * as actionTypes from '../../store/actions';\n\nimport GenreSlider from '../../components/GenreSlider/GenreSlider';\n\nimport classes from './Home.module.css';\n\nclass Home extends Component {\n\n    state = {\n        selectedRow: 0,\n        selectedColumn: 0\n    }\n\n    componentDidMount() {\n        this.loadGenresHandler();\n        document.addEventListener(\"keydown\", this.selectedMovieHandler);\n    }\n\n    selectedMovieHandler = (event) => {\n        let row = this.state.selectedRow;\n        let column = this.state.selectedColumn;\n        console.log(event.keyCode);\n        switch (event.keyCode) {\n            case 37:\n                if (column > 0) {\n                    column--;\n                } else {\n                    column = this.props.numberOfMoviesPerGenre - 1;\n                }\n                break;\n            case 40:\n                if (row < this.props.numberOfGenres - 1) {\n                    row++;\n                } else {\n                    row = 0;\n                }\n                break;\n            case 39:\n                if (column < this.props.numberOfMoviesPerGenre - 1) {\n                    column++;\n                } else {\n                    column = 0;\n                }\n                break;\n            case 38:\n                if (row > 0) {\n                    row--;\n                } else {\n                    row = this.props.numberOfGenres - 1;\n                }\n                break;\n            default:\n                console.log(\"Nope!\");\n                break;                \n        }\n        this.setState({\n            selectedRow: row,\n            selectedColumn: column\n        })\n    }\n\n    loadGenresHandler() {\n        axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${this.props.apiKey}&language=en-US`)\n            .then(response => this.props.storeGenres(response.data.genres.slice(0, this.props.numberOfGenres)));\n    }\n\n    render () {\n        return (\n            <div className={classes.Home}>\n                {this.props.genres.map(genre => {\n                    return <GenreSlider key={genre.id} id={genre.id} genre={genre.name} selectedRow={this.state.selectedRow} selectedColumn={this.state.selectedColumn}/>;\n                })}\n            </div>\n        );\n        \n    }\n}\n\nconst dataFromStore = state => {\n    return {\n        apiKey: state.apiKey,\n        numberOfGenres: state.numberOfGenres,\n        numberOfMoviesPerGenre: state.numberOfMoviesPerGenre,\n        genres: state.genres\n    }\n}\n\nconst dispatching = dispatch => {\n    return {\n        storeGenres: (genresArray) => dispatch({\n            type: actionTypes.STORE_GENRES,\n            genres: genresArray\n        })\n    }\n}\n\nexport default connect(dataFromStore, dispatching)(Home);\n"]},"metadata":{},"sourceType":"module"}