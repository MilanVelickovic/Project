{"ast":null,"code":"var _jsxFileName = \"/home/milan/Desktop/React/project/src/components/GenreSlider/GenreSlider.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport * as actionTypes from '../../store/actions';\nimport classes from './GenreSlider.module.css';\n\nclass GenreSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.loadMoviesHandler();\n    console.log(this.props.movies);\n  }\n\n  async loadMoviesHandler() {\n    for (let genre of this.props.genres) {\n      await axios.get(`https://api.themoviedb.org/3/discover/movie?with_genres=${genre.id}&api_key=d38aa8716411ef7d8e9054b34a6678ac`).then(response => this.props.storeMovies(genre.name, response.data.results));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.GenreSlider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, this.props.genre));\n  }\n\n}\n\n;\n\nconst dataFromStore = state => {\n  return {\n    genres: state.genres,\n    movies: state.movies\n  };\n};\n\nconst dispatching = dispatch => {\n  return {\n    storeMovies: (genre, moviesArray) => dispatch({\n      type: actionTypes.STORE_MOVIES,\n      moviesByGenre: {\n        genre: genre,\n        movies: moviesArray\n      }\n    })\n  };\n};\n\nexport default connect(dataFromStore, dispatching)(GenreSlider);","map":{"version":3,"sources":["/home/milan/Desktop/React/project/src/components/GenreSlider/GenreSlider.js"],"names":["React","Component","connect","axios","actionTypes","classes","GenreSlider","constructor","props","loadMoviesHandler","console","log","movies","genre","genres","get","id","then","response","storeMovies","name","data","results","render","dataFromStore","state","dispatching","dispatch","moviesArray","type","STORE_MOVIES","moviesByGenre"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;AAEA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAEhCM,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKC,iBAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,MAAvB;AACH;;AAED,QAAMH,iBAAN,GAA0B;AACtB,SAAK,IAAII,KAAT,IAAkB,KAAKL,KAAL,CAAWM,MAA7B,EAAqC;AACjC,YAAMX,KAAK,CAACY,GAAN,CAAW,2DAA0DF,KAAK,CAACG,EAAG,2CAA9E,EACDC,IADC,CACIC,QAAQ,IAAI,KAAKV,KAAL,CAAWW,WAAX,CAAuBN,KAAK,CAACO,IAA7B,EAAmCF,QAAQ,CAACG,IAAT,CAAcC,OAAjD,CADhB,CAAN;AAEH;AACJ;;AAEDC,EAAAA,MAAM,GAAI;AACN,wBACI;AAAK,MAAA,SAAS,EAAElB,OAAO,CAACC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKE,KAAL,CAAWK,KAAf,CADJ,CADJ;AAKH;;AArB+B;;AAsBnC;;AAED,MAAMW,aAAa,GAAGC,KAAK,IAAI;AAC3B,SAAO;AACHX,IAAAA,MAAM,EAAEW,KAAK,CAACX,MADX;AAEHF,IAAAA,MAAM,EAAEa,KAAK,CAACb;AAFX,GAAP;AAIH,CALD;;AAOA,MAAMc,WAAW,GAAGC,QAAQ,IAAI;AAC5B,SAAO;AACHR,IAAAA,WAAW,EAAE,CAACN,KAAD,EAAQe,WAAR,KAAwBD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEzB,WAAW,CAAC0B,YAAnB;AAAiCC,MAAAA,aAAa,EAAE;AAAClB,QAAAA,KAAK,EAAEA,KAAR;AAAeD,QAAAA,MAAM,EAAEgB;AAAvB;AAAhD,KAAD;AAD1C,GAAP;AAGH,CAJD;;AAMA,eAAe1B,OAAO,CAACsB,aAAD,EAAgBE,WAAhB,CAAP,CAAoCpB,WAApC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport * as actionTypes from '../../store/actions';\n\nimport classes from './GenreSlider.module.css';\n\nclass GenreSlider extends Component {\n\n    constructor (props) {\n        super(props);\n        this.loadMoviesHandler();\n        console.log(this.props.movies);\n    }\n\n    async loadMoviesHandler() {\n        for (let genre of this.props.genres) {\n            await axios.get(`https://api.themoviedb.org/3/discover/movie?with_genres=${genre.id}&api_key=d38aa8716411ef7d8e9054b34a6678ac`)\n                .then(response => this.props.storeMovies(genre.name, response.data.results));\n        }\n    }\n\n    render () {\n        return (\n            <div className={classes.GenreSlider}>\n                <p>{this.props.genre}</p>\n            </div>\n        );\n    }\n};\n\nconst dataFromStore = state => {\n    return {\n        genres: state.genres,\n        movies: state.movies\n    }\n}\n\nconst dispatching = dispatch => {\n    return {\n        storeMovies: (genre, moviesArray) => dispatch({type: actionTypes.STORE_MOVIES, moviesByGenre: {genre: genre, movies: moviesArray}})\n    }\n}\n\nexport default connect(dataFromStore, dispatching)(GenreSlider);"]},"metadata":{},"sourceType":"module"}