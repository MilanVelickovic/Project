{"ast":null,"code":"var _jsxFileName = \"/home/milan/Desktop/React/project/src/containers/Home/Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport * as actionTypes from '../../store/actions';\nimport GenreSlider from '../../components/GenreSlider/GenreSlider';\nimport classes from './Home.module.css';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.selectedMovieHandler = event => {\n      let row = this.props.selectedRow;\n      let column = this.props.selectedColumn;\n      console.log(event.keyCode);\n\n      switch (event.keyCode) {\n        case 37:\n          if (column > 0) {\n            column--;\n          } else {\n            column = this.props.numberOfMoviesPerGenre;\n          }\n\n          break;\n\n        case 38:\n          if (row < this.props.numberOfGenres - 1) {\n            row++;\n          } else {\n            row = 0;\n          }\n\n          break;\n\n        case 39:\n          if (column < this.props.numberOfMoviesPerGenre - 1) {\n            column++;\n          } else {\n            column = 0;\n          }\n\n          break;\n\n        case 40:\n          if (row > 0) {\n            row--;\n          } else {\n            row = this.props.numberOfGenres;\n          }\n\n          break;\n\n        default:\n          console.log(\"Nope!\");\n          break;\n      }\n\n      this.setState({\n        selectedRow: row,\n        selectedColumn: column\n      });\n      console.log(\"Row: \" + this.state.selectedRow + \", column: \" + this.state.selectedColumn);\n    };\n  }\n\n  componentDidMount() {\n    this.loadGenresHandler();\n    document.addEventListener(\"keydown\", this.selectedMovieHandler);\n  }\n\n  loadGenresHandler() {\n    axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${this.props.apiKey}&language=en-US`).then(response => this.props.storeGenres(response.data.genres.slice(0, this.props.numberOfGenres)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, this.props.genres.map(genre => {\n      return /*#__PURE__*/React.createElement(GenreSlider, {\n        key: genre.id,\n        id: genre.id,\n        genre: genre.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 28\n        }\n      });\n    }));\n  }\n\n}\n\nconst dataFromStore = state => {\n  return {\n    apiKey: state.apiKey,\n    numberOfGenres: state.numberOfGenres,\n    numberOfMoviesPerGenre: state.numberOfMoviesPerGenre,\n    genres: state.genres,\n    selectedRow: state.selectedRow,\n    selectedColumn: state.selectedColumn\n  };\n};\n\nconst dispatching = dispatch => {\n  return {\n    storeGenres: genresArray => dispatch({\n      type: actionTypes.STORE_GENRES,\n      genres: genresArray\n    })\n  };\n};\n\nexport default connect(dataFromStore, dispatching)(Home);","map":{"version":3,"sources":["/home/milan/Desktop/React/project/src/containers/Home/Home.js"],"names":["React","Component","connect","axios","actionTypes","GenreSlider","classes","Home","selectedMovieHandler","event","row","props","selectedRow","column","selectedColumn","console","log","keyCode","numberOfMoviesPerGenre","numberOfGenres","setState","state","componentDidMount","loadGenresHandler","document","addEventListener","get","apiKey","then","response","storeGenres","data","genres","slice","render","map","genre","id","name","dataFromStore","dispatching","dispatch","genresArray","type","STORE_GENRES"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport * as actionTypes from '../../store/actions';\n\nimport GenreSlider from '../../components/GenreSlider/GenreSlider';\n\nimport classes from './Home.module.css';\n\nclass Home extends Component {\n\n    componentDidMount() {\n        this.loadGenresHandler();\n        document.addEventListener(\"keydown\", this.selectedMovieHandler);\n    }\n\n    selectedMovieHandler = (event) => {\n        let row = this.props.selectedRow;\n        let column = this.props.selectedColumn;\n        console.log(event.keyCode);\n        switch (event.keyCode) {\n            case 37:\n                if (column > 0) {\n                    column--;\n                } else {\n                    column = this.props.numberOfMoviesPerGenre;\n                }\n                break;\n            case 38:\n                if (row < this.props.numberOfGenres - 1) {\n                    row++;\n                } else {\n                    row = 0;\n                }\n                break;\n            case 39:\n                if (column < this.props.numberOfMoviesPerGenre - 1) {\n                    column++;\n                } else {\n                    column = 0;\n                }\n                break;\n            case 40:\n                if (row > 0) {\n                    row--;\n                } else {\n                    row = this.props.numberOfGenres;\n                }\n                break;\n            default:\n                console.log(\"Nope!\");\n                break;                \n        }\n        this.setState({\n            selectedRow: row,\n            selectedColumn: column\n        })\n        console.log(\"Row: \" + this.state.selectedRow + \", column: \" + this.state.selectedColumn);\n    }\n\n    loadGenresHandler() {\n        axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${this.props.apiKey}&language=en-US`)\n            .then(response => this.props.storeGenres(response.data.genres.slice(0, this.props.numberOfGenres)));\n    }\n\n    render () {\n        return (\n            <div className={classes.Home}>\n                {this.props.genres.map(genre => {\n                    return <GenreSlider key={genre.id} id={genre.id} genre={genre.name}/>;\n                })}\n            </div>\n        );\n        \n    }\n}\n\nconst dataFromStore = state => {\n    return {\n        apiKey: state.apiKey,\n        numberOfGenres: state.numberOfGenres,\n        numberOfMoviesPerGenre: state.numberOfMoviesPerGenre,\n        genres: state.genres,\n        selectedRow: state.selectedRow,\n        selectedColumn: state.selectedColumn\n    }\n}\n\nconst dispatching = dispatch => {\n    return {\n        storeGenres: (genresArray) => dispatch({\n            type: actionTypes.STORE_GENRES,\n            genres: genresArray\n        })\n    }\n}\n\nexport default connect(dataFromStore, dispatching)(Home);\n"]},"metadata":{},"sourceType":"module"}